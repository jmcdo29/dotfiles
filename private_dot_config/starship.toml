format = """
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
${custom.giturl}\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$docker_context\
$package\
$cmake\
$cobol\
$container\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$pulumi\
$purescript\
$python\
$rlang\
$red\
$ruby\
$rust\
$scala\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$openstack\
$azure\
$env_var\
$crystal\
${custom.typescript}\
$custom\
$sudo\
$cmd_duration\
$line_break\
$jobs\
$battery\
$time\
$status\
$shell\
$character
"""

command_timeout = 1000

[git_status]
conflicted = "  "
untracked = " "
stashed = " "
modified = " "
staged = '[++\($count\)](green)'
renamed = " "
deleted = "🗑 "
ahead = " ⇡${count}"
diverged = "😵⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"
style = "bold cyan"

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

[directory]
read_only = " "

[docker_context]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[git_branch]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[memory_usage]
symbol = " "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[nodejs]
symbol = " "
style = "bold green"

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "

[ruby]
symbol = "  "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[custom.typescript]
command = "echo "
files = ["tsconfig.json", "tsconfig.base.json", "tsconfig.build.json"]
description = "There is a tsconfig file found in the directory"
style = "bold fg:39"
format = "with [$output]($style) "

[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server"
command = "check-git-remote"
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "at $output  "
